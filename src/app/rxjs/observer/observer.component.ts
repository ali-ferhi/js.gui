import { Component, OnInit } from '@angular/core';
import { Observable, of } from 'rxjs';
import { concatMap, delay, map } from 'rxjs/operators';

@Component({
  templateUrl: './observer.component.html'
})
export class ObserverComponent implements OnInit {

  data: string[] = [];
  error: string | undefined;
  complete: string | undefined;

  ngOnInit(): void {
    const message: string = 'Hello world, I am a message generated by an observable!';
    var observable : Observable<string> = of<string[]>(...message)
      .pipe(
        concatMap(item => 
          of(item).pipe(delay(250))
        )
      );
    observable.subscribe({
      next: (v) => {
        this.data.push(v);
      },
      error: (e) => {
        this.error = 'Error on observation!';
      },
      complete: () => {
        this.complete = 'Observation complete!';
    }});
  }

}